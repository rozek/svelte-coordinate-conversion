{"version":3,"file":"svelte-coordinate-conversion.esm.js","sources":["../src/svelte-coordinate-conversion.ts"],"sourcesContent":["//----------------------------------------------------------------------------//\n//                        Svelte Coordinate Conversion                        //\n//----------------------------------------------------------------------------//\n\n  type Position = { left:number, top:number }\n\n/**** fromViewportTo ****/\n\n  function fromViewportTo (\n    System:'document'|'local', originalPosition:Position, Target?:Element\n  ):Position {\n    switch (true) {\n      case (originalPosition == null):\n        throw new Error('no \"Position\" given')\n      case (typeof originalPosition.left !== 'number') && ! (originalPosition.left as Number instanceof Number):\n      case (typeof originalPosition.top  !== 'number') && ! (originalPosition.top  as Number instanceof Number):\n        throw new Error('invalid \"Position\" given')\n    }\n\n    switch (System) {\n      case null: case undefined:\n        throw new Error('no coordinate system given')\n// @ts-ignore the following check is for non-TypeScript applications only\n      case 'viewport':\n        return { left:originalPosition.left, top:originalPosition.top }\n      case 'document':\n        return {\n          left:originalPosition.left + window.scrollX,\n          top:  originalPosition.top + window.scrollY\n        }\n      case 'local':\n        switch (true) {\n          case (Target == null):\n            throw new Error('no target element given')\n          case (Target instanceof Element):\n            let computedStyle = window.getComputedStyle(Target as Element)\n\n            let leftOffset = parseFloat(computedStyle.borderLeftWidth)\n            let topOffset  = parseFloat(computedStyle.borderTopWidth)\n\n            let TargetPositionInViewport = (Target as Element).getBoundingClientRect()\n            return {\n              left:originalPosition.left - TargetPositionInViewport.left - leftOffset,\n              top:  originalPosition.top - TargetPositionInViewport.top  - topOffset\n            }\n          default:\n            throw new Error('invalid target element given')\n        }\n      default:\n        throw new Error('invalid coordinate system given')\n    }\n  }\n\n/**** fromDocumentTo ****/\n\n  function fromDocumentTo (\n    System:'viewport'|'local', originalPosition:Position, Target?:Element\n  ):Position {\n    switch (true) {\n      case (originalPosition == null):\n        throw new Error('no \"Position\" given')\n      case (typeof originalPosition.left !== 'number') && ! (originalPosition.left as Number instanceof Number):\n      case (typeof originalPosition.top  !== 'number') && ! (originalPosition.top  as Number instanceof Number):\n        throw new Error('invalid \"Position\" given')\n    }\n\n    switch (System) {\n      case null: case undefined:\n        throw new Error('no coordinate system given')\n      case 'viewport':\n        return {\n          left:originalPosition.left - window.scrollX,\n          top:  originalPosition.top - window.scrollY\n        }\n// @ts-ignore the following check is for non-TypeScript applications only\n      case 'document':\n        return { left:originalPosition.left, top:originalPosition.top }\n      case 'local':\n        switch (true) {\n          case (Target == null):\n            throw new Error('no target element given')\n          case (Target instanceof Element):\n            let computedStyle = window.getComputedStyle(Target as Element)\n\n            let leftOffset = parseFloat(computedStyle.borderLeftWidth)\n            let topOffset  = parseFloat(computedStyle.borderTopWidth)\n\n            let TargetPositionInViewport = (Target as Element).getBoundingClientRect()\n            return {\n              left:originalPosition.left + window.scrollX - TargetPositionInViewport.left - leftOffset,\n              top:  originalPosition.top + window.scrollY - TargetPositionInViewport.top  - topOffset\n            }\n          default:\n            throw new Error('invalid target element given')\n        }\n      default:\n        throw new Error('invalid coordinate system given')\n    }\n  }\n\n/**** fromLocalTo ****/\n\n  function fromLocalTo (\n    System:'viewport'|'document', originalPosition:Position, Source?:Element\n  ):Position {\n    switch (true) {\n      case (originalPosition == null):\n        throw new Error('no \"Position\" given')\n      case (typeof originalPosition.left !== 'number') && ! (originalPosition.left as Number instanceof Number):\n      case (typeof originalPosition.top  !== 'number') && ! (originalPosition.top  as Number instanceof Number):\n        throw new Error('invalid \"Position\" given')\n    }\n\n    let SourcePositionInViewport:Position, leftPosition:number, topPosition:number\n    switch (true) {\n      case (Source == null):\n        throw new Error('no source element given')\n      case (Source instanceof Element):\n        let computedStyle = window.getComputedStyle(Source as Element)\n\n        let leftOffset = parseFloat(computedStyle.borderLeftWidth)\n        let topOffset  = parseFloat(computedStyle.borderTopWidth)\n\n        SourcePositionInViewport = (Source as Element).getBoundingClientRect()\n        leftPosition = SourcePositionInViewport.left + leftOffset\n        topPosition  = SourcePositionInViewport.top  + topOffset\n        break\n      default:\n        throw new Error('invalid source element given')\n    }\n\n    switch (System) {\n      case null: case undefined:\n        throw new Error('no coordinate system given')\n      case 'viewport':\n        return {\n          left:originalPosition.left + leftPosition,\n          top:  originalPosition.top + topPosition\n        }\n      case 'document':\n        return {\n          left:originalPosition.left + leftPosition + window.scrollX,\n          top:  originalPosition.top + topPosition  + window.scrollY\n        }\n// @ts-ignore the following check is for non-TypeScript applications only\n      case 'local':\n        return { left:originalPosition.left, top:originalPosition.top }\n      default:\n        throw new Error('invalid coordinate system given')\n    }\n  }\n\n  export default {\n    fromViewportTo,\n    fromDocumentTo,\n    fromLocalTo\n  }\n"],"names":[],"mappings":"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"}